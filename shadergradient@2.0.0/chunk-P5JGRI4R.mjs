import{a as d}from"./chunk-VCIBOLQ2.mjs";import{a as l}from"./chunk-LHZKBITZ.mjs";import{a as f,b as B}from"./chunk-RSU6LQ7I.mjs";import{A as R,E as S,h as n,j as g,l as a,n as m,s as o,t as w,u as x}from"./chunk-T5JJUGZA.mjs";var P=class{constructor(e,t){if(this.renderer=e,t===void 0){let i={minFilter:n,magFilter:n,format:g},s=e.getSize(new a);this._pixelRatio=e.getPixelRatio(),this._width=s.width,this._height=s.height,t=new m(this._width*this._pixelRatio,this._height*this._pixelRatio,i),t.texture.name="EffectComposer.rt1"}else this._pixelRatio=1,this._width=t.width,this._height=t.height;this.renderTarget1=t,this.renderTarget2=t.clone(),this.renderTarget2.texture.name="EffectComposer.rt2",this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2,this.renderToScreen=!0,this.passes=[],l===void 0&&console.error("THREE.EffectComposer relies on CopyShader"),d===void 0&&console.error("THREE.EffectComposer relies on ShaderPass"),this.copyPass=new d(l),this.clock=new S}swapBuffers(){let e=this.readBuffer;this.readBuffer=this.writeBuffer,this.writeBuffer=e}addPass(e){this.passes.push(e),e.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}insertPass(e,t){this.passes.splice(t,0,e),e.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}removePass(e){let t=this.passes.indexOf(e);t!==-1&&this.passes.splice(t,1)}isLastEnabledPass(e){for(let t=e+1;t<this.passes.length;t++)if(this.passes[t].enabled)return!1;return!0}render(e){e===void 0&&(e=this.clock.getDelta());let t=this.renderer.getRenderTarget(),i=!1;for(let s=0,h=this.passes.length;s<h;s++){let r=this.passes[s];if(r.enabled!==!1){if(r.renderToScreen=this.renderToScreen&&this.isLastEnabledPass(s),r.render(this.renderer,this.writeBuffer,this.readBuffer,e,i),r.needsSwap){if(i){let u=this.renderer.getContext(),_=this.renderer.state.buffers.stencil;_.setFunc(u.NOTEQUAL,1,4294967295),this.copyPass.render(this.renderer,this.writeBuffer,this.readBuffer,e),_.setFunc(u.EQUAL,1,4294967295)}this.swapBuffers()}f!==void 0&&(r instanceof f?i=!0:r instanceof B&&(i=!1))}}this.renderer.setRenderTarget(t)}reset(e){if(e===void 0){let t=this.renderer.getSize(new a);this._pixelRatio=this.renderer.getPixelRatio(),this._width=t.width,this._height=t.height,e=this.renderTarget1.clone(),e.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}this.renderTarget1.dispose(),this.renderTarget2.dispose(),this.renderTarget1=e,this.renderTarget2=e.clone(),this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2}setSize(e,t){this._width=e,this._height=t;let i=this._width*this._pixelRatio,s=this._height*this._pixelRatio;this.renderTarget1.setSize(i,s),this.renderTarget2.setSize(i,s);for(let h=0;h<this.passes.length;h++)this.passes[h].setSize(i,s)}setPixelRatio(e){this._pixelRatio=e,this.setSize(this._width,this._height)}},z=class{constructor(){this.enabled=!0,this.needsSwap=!0,this.clear=!1,this.renderToScreen=!1}setSize(){}render(){console.error("THREE.Pass: .render() must be implemented in derived pass.")}},T=new R(-1,1,1,-1,0,1),c=new w;c.setAttribute("position",new o([-1,3,0,-1,-1,0,3,-1,0],3));c.setAttribute("uv",new o([0,2,0,0,2,0],2));var E=class{constructor(e){this._mesh=new x(c,e)}dispose(){this._mesh.geometry.dispose()}render(e){e.render(this._mesh,T)}get material(){return this._mesh.material}set material(e){this._mesh.material=e}};export{P as a,z as b,E as c};
